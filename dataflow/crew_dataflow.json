{
	"name": "crew_dataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CosmosDbSqlApiCrewRawCollection",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "CosmosDbSqlApiCrewCollection",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "AlterRow1"
				}
			],
			"script": "parameters{\n\tcrewId as string (\"31\")\n}\nsource(output(\n\t\tActive_Flag as boolean,\n\t\tApplication_Date as string,\n\t\tAvailable_From_Date as string,\n\t\tCpf_Flag as boolean,\n\t\tCpf_Number as string,\n\t\tCrew_Alergies as string,\n\t\tCrew_Birth_Country as string,\n\t\tCrew_Birth_Date as string,\n\t\tCrew_Blood_Rh as string,\n\t\tCrew_Blood_Type as string,\n\t\tCrew_Boiler_Suit_Size as string,\n\t\tCrew_Born_Place as string,\n\t\tCrew_Change_Password as string,\n\t\tCrew_Cis_Idno as string,\n\t\tCrew_Code as integer,\n\t\tCrew_Color_Blindness as string,\n\t\tCrew_Comp_Date as string,\n\t\tCrew_Dis_Marks as string,\n\t\tCrew_Employment_Year as string,\n\t\tCrew_Eye_Sight as string,\n\t\tCrew_Eyes as string,\n\t\tCrew_Father_Middle_Name as string,\n\t\tCrew_Father_Surname as string,\n\t\tCrew_Fathers_Name as string,\n\t\tCrew_Group_Date as string,\n\t\tCrew_Hair as string,\n\t\tCrew_Height as integer,\n\t\tCrew_Hrdf as string,\n\t\tCrew_ID as string,\n\t\tCrew_Indos_No as string,\n\t\tCrew_Isn_Employment_No as string,\n\t\tCrew_Marriage_Date as string,\n\t\tCrew_Medical_Insurance_Scheme as boolean,\n\t\tCrew_Medication as string,\n\t\tCrew_Middlename as string,\n\t\tCrew_Mother_Maiden_Name as string,\n\t\tCrew_Mother_Middle_Name as string,\n\t\tCrew_Mother_Surname as string,\n\t\tCrew_Mothers_Name as string,\n\t\tCrew_Name as string,\n\t\tCrew_Name2 as string,\n\t\tCrew_Nationality as string,\n\t\tCrew_Nationality2 as string,\n\t\tCrew_Nationality_Date as string,\n\t\tCrew_Nickname as string,\n\t\tCrew_Nor_Idno as string,\n\t\tCrew_Orig_Born_Place as string,\n\t\tCrew_Orig_Middlename as string,\n\t\tCrew_Orig_Name as string,\n\t\tCrew_Orig_Surname as string,\n\t\tCrew_Pagibig_No as string,\n\t\tCrew_Phealth_No as string,\n\t\tCrew_Pool as string,\n\t\tCrew_Principal as integer,\n\t\tCrew_Race as string,\n\t\tCrew_Rank as string,\n\t\tCrew_Rank_Certificate as string,\n\t\tCrew_Rank_Certificate_Date as string,\n\t\tCrew_Rank_Point as string,\n\t\tCrew_Religion as string,\n\t\tCrew_Sb_Country as string,\n\t\tCrew_Sex as string,\n\t\tCrew_Shipnet as string,\n\t\tCrew_Shoe_Size as string,\n\t\tCrew_Socso as string,\n\t\tCrew_Srcno as string,\n\t\tCrew_Ssn as string,\n\t\tCrew_Sss_No as string,\n\t\tCrew_Status_Code as string,\n\t\tCrew_Surname as string,\n\t\tCrew_Tax_Regime as string,\n\t\tCrew_Tin as string,\n\t\tCrew_Type as string,\n\t\tCrew_Weight as integer,\n\t\tCrew_password as string,\n\t\tCrews_Rank_Point_Date as string,\n\t\tDate_Last_Med as string,\n\t\tDecision_Code as string,\n\t\tDualog_Status as string,\n\t\tEmployment_End_Date as string,\n\t\tEnglish_Test as string,\n\t\tEst_Sign_On as string,\n\t\tExtended_Leave as string,\n\t\tHealth_Status as string,\n\t\tLast_Edited_Date as string,\n\t\tLast_Sign_Off_Date as string,\n\t\tLc_Id as string,\n\t\tLv_Id as string,\n\t\tManning_Office as string,\n\t\tManual_Update as string,\n\t\tMartial_Status as short,\n\t\tNext_Vessel as integer,\n\t\tOb_Stat as string,\n\t\tOffice_Vessel_Flag as string,\n\t\tOn_Vessel as integer,\n\t\tPassport_Country as string,\n\t\tPassport_Details as string,\n\t\tPassport_Expiry_Date as string,\n\t\tPassport_Issue_Place as string,\n\t\tPassport_Issued_Date as string,\n\t\tPassport_Number as string,\n\t\tPension_Flag as string,\n\t\tPort_Authority as string,\n\t\tPort_Authority2 as string,\n\t\tPr_Status as string,\n\t\tPrev_Exp_As as string,\n\t\tPrior_Exp_Months as string,\n\t\tPrior_Exp_Voyages as string,\n\t\tPromotion as string,\n\t\tPromotion_Date as string,\n\t\tPromotion_Rank as string,\n\t\tRank_Seniority as string,\n\t\tRemarks1 as string,\n\t\tRemarks2 as string,\n\t\tSBMer as boolean,\n\t\tSeamanBook_Expiry as string,\n\t\tSeamanBook_Issued as string,\n\t\tSeamanBook_Number as string,\n\t\tSeamanBook_Place as string,\n\t\tSeniority as integer,\n\t\tSign_On_Remarks as string,\n\t\tSign_On_Remarks2 as string,\n\t\tSign_On_Remarks3 as string,\n\t\tSource_Code as string,\n\t\tStatus_Code as string,\n\t\tVessel_Name as string,\n\t\tWage_Matrix as string,\n\t\tWage_Type as string,\n\t\t{_attachments} as string,\n\t\t{_etag} as string,\n\t\t{_rid} as string,\n\t\t{_self} as string,\n\t\t{_ts} as integer,\n\t\tid as string,\n\t\tname as string,\n\t\tpool as string,\n\t\trank as string,\n\t\tregion as short,\n\t\tsurname as string,\n\t\tvesselName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tquery: (concat(\"SELECT c.Crew_Code AS id, c.Crew_Surname AS surname, c.Crew_Name as name, c.Crew_Rank as rank, c.Crew_Type AS SBMer, c.Vessel_Name AS vesselName, c.Crew_Pool as pool FROM c WHERE c.Crew_Code = \",$crewId)),\n\tformat: 'documentQuery',\n\tsystemColumns: false,\n\tthroughput: 3500) ~> source1\nsource1 derive(SBMer = !equalsIgnoreCase(byName('SBMer'), \"VENDOR\") ||  isNull(byName('SBMer')),\n\t\tregion = iif(contains(['FPSO Cidade de Saquarema', 'FPSO Cidade de Maricá', 'FPSO Cidade de Ilhabela', 'FPSO Cidade de Paraty', 'FPSO CIdade de Anchieta', 'FPSO Espírito Santo', 'FPSO Capixaba'], #item == byName('vesselName')), \"1\", \"2\"),\n\t\tid = toString(byName('id'))) ~> DerivedColumn1\nDerivedColumn1 alterRow(upsertIf(true())) ~> AlterRow1\nAlterRow1 sink(input(\n\t\tname as string,\n\t\tsurname as string,\n\t\tpool as string,\n\t\trank as string,\n\t\toffshore as boolean,\n\t\tSBMer as boolean,\n\t\tvesselName as string,\n\t\tregion as string,\n\t\tdepartment as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:true,\n\tformat: 'document',\n\tpartitionKey: ['/id'],\n\tthroughput: 3500,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}